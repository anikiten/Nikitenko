[CRAB]
jobtype = cmssw

scheduler  = glite

use_server = 1

[CMSSW]
### The data you want to access (to be found on DBS)


# 900 GeV

# datasetpath=/MinBias/Summer09-STARTUP3X_V8P_900GeV-v1/GEN-SIM-RECO

# 2.3 TeV MC
# datasetpath=/MinBias/Summer09-STARTUP3X_V8O_2360GeV-v1/GEN-SIM-RECO

# 7 TeV MC

# datasetpath=/MinBias/Spring10-START3X_V25_356ReReco-v2/GEN-SIM-RECO

# datasetpath=/MinBias/Spring10-START3X_V25_354p1ReReco-v1/GEN-SIM-RECO

# datasetpath=/MinBias/Spring10-START3X_V25B_356ReReco-v1/GEN-SIM-RECO

# 356 /MinBias/Spring10-START3X_V26A_356ReReco-v1/GEN-SIM-RECO


# use_parent = 1

pset=JPTAnalysis_Data_cfg.py

### Total number of events to be accessed: -1 means all ("-1" is not usable if no input)
total_number_of_events= 10000000
events_per_job = 1000000
### Number of jobs
#number_of_jobs = 40

### The output files produced by your application (comma separated list)
output_file = JPTAnalysis_Data.root

[USER]

# check_user_remote_dir = 0

#
#additional_input_files = /home_local/fanzago/fede.txt, ....
#
#ui_working_dir = /afs/cern.ch/user/a/anayak/scratch0/CMS/CRAB/test

#################################
#### JOB OUTPUT MANAGEMENT #####
#################################
return_data = 0

copy_data = 1

storage_element = srm-cms.cern.ch

storage_path=/srm/managerv2?SFN=/castor/cern.ch

user_remote_dir=/user/a/anikiten/DataJPTat7TeV

# user_remote_dir=/user/a/anikiten/SinglePionEfficiencyNewCMSSW_3_1_2_6M

# user_remote_dir=/user/a/anikiten/SinglePionEfficiencyNew1_10

# user_remote_dir=/user/a/anikiten/SinglePionEfficiencyNew10_50

# user_remote_dir=/user/a/anikiten/SinglePionEfficiencyNew50_300

## the SE directory (or the mountpoint) that has to be writable from all
##(imp : Castor directory should be made public to store output root files,
##       using "rfchmod 775 dirName")

[GRID]
## WMS to use
rb = CERN

##  Black and White Lists management:
## by SE 
#se_black_list =
#se_white_list =
## by CE
#ce_black_list =
#ce_white_list =

## CMS myproxy server, to proxy delegation
proxy_server = myproxy.cern.ch

## Role in VOMS
#role = superman
## Group in VOMS
#group = superheros

## cpu time and wall_clock_time(=real time) in minutes. Written into the jdl file
#max_cpu_time = 60
#max_wall_clock_time = 60

